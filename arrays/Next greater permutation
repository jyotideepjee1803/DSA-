31. Next Permutation
A permutation of an array of integers is an arrangement of its members into a sequence or linear order.

Given an array of integers nums, find the next permutation of nums.

The replacement must be in place and use only constant extra memory.
Example 1:

Input: nums = [1,2,3]
Output: [1,3,2]

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size(),j;
        
        //Step 1 : Find the 1st occurence of decreasing element : 
        for(j=n-1;j>0;j--){
            if(nums[j] > nums[j-1]) break;
        }
        //if the sequence is in descending order, no larger permutation possible => return ascending order
        if(j==0){
            sort(nums.begin(),nums.end());
            return;
        }
        
        //Step 2 : get the element just greater than the smaller element : 
        int big = j, small = j-1;
        int temp = big;
        for(int i=n-1;i>big;i--){
            if(nums[i] > nums[small] and nums[i]<nums[temp]) temp = i;
        }
        
        //Step 3 : swap the smaller and jst greater element :
        swap(nums[small], nums[temp]);
        
        //Step 4 : sort the array from the big ptr to the end : 
        sort(nums.begin()+big,nums.end());
    }
};
